pipeline {
    agent any

    environment {
        IMAGE_NAME = "my-go-app"
        HOME = "${WORKSPACE}"
    }

    stages {
        stage('Go Build & Test') {
            
        agent {
          docker {
            image 'golang:1.23'
            args '-v $PWD:/app -w /app'
          }
        
        }

        environment {
            GOCACHE = '/tmp/go-cache'
        }
            steps {
                sh 'go version'
                sh 'go mod tidy'
                sh 'go build -o myapp'   // local build for testing only
                sh 'go test ./...'
            }
        }

        stage('Build Docker Image') {
      
            steps {
                script {
                    // This Dockerfile does the real build (multi-stage)
                    docker.build("${IMAGE_NAME}:latest")
                }

                sh 'docker build -t ${IMAGE_NAME}:latest .'
            }
        }

        stage('Deploy Locally') {
            steps {
                sh 'docker rm -f my-go-app || true'
                sh 'docker run -d -p 8500:8500 --name my-go-app my-go-app:latest'
            }
        }
    }
}
